version: "3"

services:
  # Redis
  redis:
    image: redis:latest
    container_name: redis_fans
    command: redis-server --dir /data
    restart: always
    volumes:
    - ./test_data/redis:/data
    ports:
    - 63799:6379

  # Mongo
  mongo1:
    hostname: mongo1
    image: mongo
    container_name: mongo1
    restart: always
    volumes:
    - ./test_data/mongo1:/var/lib/mongodb
    expose:
      - 27017
    ports:
    - 27017:27017
#    networks:
#      - mongo_cluster
    command: mongod --port 27017 --replSet mongo_replSet

  mongo2:
    hostname: mongo2
    image: mongo
    container_name: mongo2
    volumes:
    - ./test_data/mongo2:/var/lib/mongodb
    expose:
      - 27018
    ports:
    - 27018:27018
#    networks:
#    - mongo_cluster
    command: mongod --port 27018 --replSet mongo_replSet

  mongo3:
    hostname: mongo3
    image: mongo
    container_name: mongo3
    volumes:
    - ./test_data/mongo3:/var/lib/mongodb
    expose:
      - 27019
    ports:
    - 27019:27019
#    networks:
#    - mongo_cluster
    command: mongod --port 27019 --replSet mongo_replSet

  rsinit:
    build:
      context: ./static/dockerfile/rsinit
      dockerfile: Dockerfile
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    entrypoint: ["bash", "-c", "rs.sh"]
#    networks:
#      - mongo_cluster

  # rabbitmq  run this command "rabbitmq-plugins enable rabbitmq_management" then you can login website http://localhost:15672
  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    environment:
    - RABBITMQ_USERNAME=justfans
    - RABBITMQ_PASSWORD=bitapp19
    restart: always
    ports:
    - 15672:15672
    - 5672:5672

#networks:
#  mongo_cluster: